{"version":3,"file":"index.js","sources":["../../../cep.config.ts","../../../src/shared/shared.ts","../../../src/jsx/utils/samples.ts","../../../src/jsx/aeft/aeft.ts","../../../src/jsx/ilst/ilst.ts","../../../src/jsx/anim/anim.ts","../../../src/jsx/ppro/ppro.ts","../../../src/jsx/phxs/phxs.ts","../../../src/jsx/index.ts"],"sourcesContent":["import { CEP_Config } from \"vite-cep-plugin\";\nimport { version } from \"./package.json\";\n\n\nconst config: CEP_Config = {\n  version,\n  id: \"com.nerdzxp.cep\",\n  displayName: \"Nerdzxp\",\n  symlink: \"local\",\n  port: 3000,\n  servePort: 5000,\n  startingDebugPort: 8860,\n  extensionManifestVersion: 6.0,\n  requiredRuntimeVersion: 9.0,\n  hosts: [\n    {\n      name: \"AEFT\",\n      version: \"[0.0,99.9]\",\n    },\n    {\n      name: \"PPRO\",\n      version: \"[0.0,99.9]\",\n    },\n    {\n      name: \"ILST\",\n      version: \"[0.0,99.9]\",\n    },\n    {\n      name: \"PHXS\",\n      version: \"[0.0,99.9]\",\n    },\n    {\n      name: \"FLPR\",\n      version: \"[0.0,99.9]\",\n    },\n  ],\n\n  type: \"Panel\",\n  iconDarkNormal: \"./src/assets/light-icon.png\",\n  iconNormal: \"./src/assets/dark-icon.png\",\n  iconDarkNormalRollOver: \"./src/assets/light-icon.png\",\n  iconNormalRollOver: \"./src/assets/dark-icon.png\",\n  parameters: [\"--v=0\", \"--enable-nodejs\", \"--mixed-context\"],\n  width: 500,\n  height: 550,\n\n  panels: [\n    {\n      mainPath: \"./main/index.html\",\n      name: \"main\",\n      panelDisplayName: \"Nerdzxp\",\n      autoVisible: true,\n      width: 600,\n      height: 650,\n    },\n\n  ],\n  build: {\n    jsxBin: \"off\",\n    sourceMap: true,\n  },\n  zxp: {\n    country: \"US\",\n    province: \"CA\",\n    org: \"MyCompany\",\n    password: \"mypassword\",\n    tsa: \"http://timestamp.digicert.com/\",\n    sourceMap: false,\n    jsxBin: \"off\",\n  },\n  installModules: [],\n  copyAssets: [],\n  copyZipAssets: [],\n};\nexport default config;\n","import config from \"../../cep.config\";\nexport const ns = config.id;\n","export const helloError = (str: string) => {\n  // Intentional Error for Error Handling Demonstration\n  //@ts-ignore\n  str = strr;\n};\n\nexport const helloStr = (str: string) => {\n  alert(`ExtendScript received a string: ${str}`);\n  return str;\n};\nexport const helloNum = (n: number) => {\n  alert(`ExtendScript received a number: ${n.toString()}`);\n  return n;\n};\nexport const helloArrayStr = (arr: string[]) => {\n  alert(\n    `ExtendScript received an array of ${arr.length} strings: ${arr.toString()}`\n  );\n  return arr;\n};\nexport const helloObj = (obj: { height: number; width: number }) => {\n  alert(`ExtendScript received an object: ${JSON.stringify(obj)}`);\n  return {\n    y: obj.height,\n    x: obj.width,\n  };\n};\n","import {\r\n  helloError,\r\n  helloStr,\r\n  helloNum,\r\n  helloArrayStr,\r\n  helloObj,\r\n} from \"../utils/samples\";\r\nexport { helloError, helloStr, helloNum, helloArrayStr, helloObj };\r\n\r\nexport const helloWorld = () => {\r\n  alert(\"Hello from After Effects!\");\r\n  app.project.activeItem;\r\n};\r\n\r\n//#region explodeShapeLayers\r\nexport function explodeShapeLayers() {\r\n  let comp: CompItem; \r\n  let layer; \r\n\r\n  app.beginUndoGroup(\"Explode Shape Layers\");\r\n\r\n  if (!(app.project.activeItem instanceof CompItem)) {\r\n    return;\r\n  }\r\n\r\n  comp = app.project.activeItem;\r\n\r\n  if (comp.selectedLayers.length <= 0) {\r\n    return;\r\n  }\r\n\r\n  layer = comp.selectedLayers[0];\r\n  var shapeContents = layer.property(\"ADBE Root Vectors Group\");\r\n\r\n  if (!(shapeContents instanceof PropertyGroup)) {\r\n    return;\r\n  }\r\n\r\n  var x: number;\r\n  var y: number;\r\n  var d: number;\r\n\r\n  if (layer.selectedProperties.length == 0) {\r\n    for (var i = 1; i <= shapeContents.numProperties; i++) {\r\n      layer.duplicate();\r\n      var duplicate = comp.layer(layer.index - 1);\r\n      duplicate.name = duplicate.property(\"ADBE Root Vectors Group\").property(i).name;\r\n      x = 0; \r\n      y = 0; \r\n      d = 0;\r\n      \r\n      for (var h = 1; h < i; h++) {\r\n        duplicate.property(\"ADBE Root Vectors Group\").property(h - x).remove();\r\n        x++; \r\n        d++;\r\n      }\r\n\r\n      for (var k = 2; k <= (shapeContents.numProperties - d ); k++) {\r\n        duplicate.property(\"ADBE Root Vectors Group\").property(k - y).remove();\r\n        y++;\r\n      }\r\n    }\r\n  } else if (layer.selectedProperties.length > 0) {\r\n    for (var i = 0; i < layer.selectedProperties.length; i++) {\r\n      layer.duplicate();\r\n      var duplicate = comp.layer(layer.index - 1);\r\n      duplicate.name = layer.selectedProperties[i].name; \r\n      x = 0; \r\n      y = 0; \r\n      d = 0;\r\n      \r\n      for (var h = 1; h < i; h++) {\r\n        if (duplicate.property(\"ADBE Root Vectors Group\").property(h - x).name != layer.selectedProperties[i].name) {\r\n          duplicate.property(\"ADBE Root Vectors Group\").property(h - x).remove();\r\n          x++; \r\n          d++;\r\n        }\r\n      }\r\n\r\n      for (var k = 1; k <= (shapeContents.numProperties - d ); k++) {\r\n        if (duplicate.property(\"ADBE Root Vectors Group\").property(k - y).name != layer.selectedProperties[i].name) {\r\n          duplicate.property(\"ADBE Root Vectors Group\").property(k - y).remove();\r\n          y++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (comp && layer && layer.enabled) {\r\n    layer.enabled = false;\r\n  }\r\n\r\n  app.endUndoGroup();\r\n}\r\n//#endregion explodeShapeLayers","import {\n  helloError,\n  helloStr,\n  helloNum,\n  helloArrayStr,\n  helloObj,\n} from \"../utils/samples\";\nexport { helloError, helloStr, helloNum, helloArrayStr, helloObj };\n\nexport const helloWorld = () => {\n  alert(\"Hello from Illustrator\");\n  app.activeDocument.path;\n};\n","export const helloWorld = () => {\n  alert(\"Hello from Animate\");\n  document.path;\n};\n","import {\n  helloError,\n  helloStr,\n  helloNum,\n  helloArrayStr,\n  helloObj,\n} from \"../utils/samples\";\nexport { helloError, helloStr, helloNum, helloArrayStr, helloObj };\n\nexport const qeDomFunction = () => {\n  if (typeof qe === \"undefined\") {\n    app.enableQE();\n  }\n  if (qe) {\n    qe.name;\n    qe.project.getVideoEffectByName(\"test\");\n  }\n};\n\nexport const helloWorld = () => {\n  alert(\"Hello from Premiere Pro.\");\n};\n","import {\n  helloError,\n  helloStr,\n  helloNum,\n  helloArrayStr,\n  helloObj,\n} from \"../utils/samples\";\nexport { helloError, helloStr, helloNum, helloArrayStr, helloObj };\n\nexport const helloWorld = () => {\n  app.activeDocument;\n  alert(\"Hello from Photoshop\");\n};\n","// @include './lib/json2.js'\n\nimport { ns } from \"../shared/shared\";\n\nimport * as aeft from \"./aeft/aeft\";\nimport * as ilst from \"./ilst/ilst\";\nimport * as anim from \"./anim/anim\";\nimport * as ppro from \"./ppro/ppro\";\nimport * as phxs from \"./phxs/phxs\";\n\nlet main: any;\n\nswitch (BridgeTalk.appName) {\n  case \"premierepro\":\n  case \"premiereprobeta\":\n    main = ppro;\n    break;\n  case \"aftereffects\":\n  case \"aftereffectsbeta\":\n    main = aeft;\n    break;\n  case \"illustrator\":\n  case \"illustratorbeta\":\n    main = ilst;\n    break;\n  case \"photoshop\":\n  case \"photoshopbeta\":\n    main = phxs;\n    break;\n  default:\n    //@ts-ignore\n    if (app.appName === \"Adobe Animate\") {\n      main = anim;\n    }\n    break;\n}\n//@ts-ignore\nconst host = typeof $ !== \"undefined\" ? $ : window;\nhost[ns] = main;\n\nexport type Scripts = typeof aeft &\n  typeof ilst &\n  typeof anim &\n  typeof ppro &\n  typeof phxs;\n"],"names":["version","id","displayName","symlink","port","servePort","startingDebugPort","extensionManifestVersion","requiredRuntimeVersion","hosts","name","type","iconDarkNormal","iconNormal","iconDarkNormalRollOver","iconNormalRollOver","parameters","width","height","panels","mainPath","panelDisplayName","autoVisible","build","jsxBin","sourceMap","zxp","country","province","org","password","tsa","installModules","copyAssets","copyZipAssets","str","alert","app","comp","layer","duplicate","x","y","d","qe","main","host"],"mappings":";;AAIA;AACEA;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AAEIC;AACAV;AACF;AAEEU;AACAV;AACF;AAEEU;AACAV;AACF;AAEEU;AACAV;AACF;AAEEU;AACAV;AACF;AAGFW;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AAEAC;AAEIC;AACAV;AACAW;AACAC;AACAL;AACAC;AACF;AAGFK;AACEC;AACAC;;AAEFC;AACEC;AACAC;AACAC;AACAC;AACAC;AACAN;AACAD;;AAEFQ;AACAC;AACAC;AACF;;ACxEA;;ACDA;AACE;AACA;AACAC;AACF;AAEA;AACEC;AACA;AACF;AACA;;AAEE;AACF;AACA;AACEA;AAGA;AACF;AACA;;;;;;AAMA;;ACjBA;;;AAGA;;AAEA;AACA;AACE;AACA;AAEAC;;AAGE;AACF;AAEAC;AAEA;AACE;AACF;AAEAC;AACA;AAEA;AACE;AACF;AAEA;AACA;AACA;AAEA;AACE;;;AAGEC;AACAC;AACAC;AACAC;;AAGEH;AACAC;AACAE;AACF;AAEA;AACEH;AACAE;AACF;AACF;;AAEA;;;;AAIED;AACAC;AACAC;;;AAIIH;AACAC;AACAE;AACF;AACF;AAEA;;AAEIH;AACAE;AACF;AACF;AACF;AACF;AAEA;;AAEA;;AAGF;AACA;;;;;;;;;;;;;ACrFA;;;AAGA;;;;;;;;;;;;ACZA;;AAGA;;;;;;;ACMA;AACE;;AAEA;AACA;AACEE;AACAA;AACF;AACF;AAEA;;AAEA;;;;;;;;;;;;;ACZA;AACEP;;AAEF;;;;;;;;;;;;ACFA;AAEA;AACE;AACA;AACEQ;AACA;AACF;AACA;AACEA;AACA;AACF;AACA;AACEA;AACA;AACF;AACA;AACEA;AACA;AACF;AACE;AACA;AACEA;AACF;AACA;AACJ;AACA;AACA;AACAC"}